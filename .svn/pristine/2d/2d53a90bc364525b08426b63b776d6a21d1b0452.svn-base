package com.skyrss;

import java.util.Random;

import com.lidroid.xutils.BitmapUtils;
import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest.HttpMethod;
import com.skyrss.bean.NewsDetail;
import com.skyrss.bean.NewsDetail.NewsItem;
import com.skyrss.global.SourceList;
import com.skyrss.utils.ExtractImgUrlUtil;
import com.skyrss.utils.GroupHttpUtils;
import com.skyrss.utils.HttpCallbackListener;
import com.skyrss.utils.XmlparserUtils;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.Matrix.ScaleToFit;
import android.os.Bundle;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.util.Log;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewDebug.FlagToString;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.BaseAdapter;
import android.widget.GridView;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.PopupMenu;
import android.widget.PopupMenu.OnDismissListener;
import android.widget.PopupMenu.OnMenuItemClickListener;
import android.widget.TextView;
import android.widget.Toast;

import com.skyrss.bean.NewsDetail;
import com.viewpagerindicator.CirclePageIndicator;

public class HomeActivity extends Activity {

	private NewsDetail detail;
	private ViewPager vp_home_rollnews;

	private String[] imgUrls = new String[4];
	private String[] titles = new String[4];
	private TextView tv_home_rolltitles;
	private CirclePageIndicator cpi_home_rollnews;
	private int randomSourceId;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_home);

		GridView gView = (GridView) findViewById(R.id.gv_home_sourcelist);
		vp_home_rollnews = (ViewPager) findViewById(R.id.vp_home_rollnews);
		tv_home_rolltitles = (TextView) findViewById(R.id.tv_home_rolltitles);
		cpi_home_rollnews = (CirclePageIndicator) findViewById(R.id.cpi_home_rollnews);

		ImageButton ib_home_addsource = (ImageButton) findViewById(R.id.ib_home_addsource);
		ib_home_addsource.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				Intent jump = new Intent(HomeActivity.this,
						FindmoreActivity.class);
				startActivity(jump);
				finish();
			}

		});


		gView.setAdapter(new MyNewsSourceAdapter());
		gView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(HomeActivity.this,
						SourceActivity.class);
				intent.putExtra("source", position);
				intent.putExtra("sourcename", SourceList.sourceNameList[position]);
				startActivity(intent);
			}
		});

		initOneSource();

	}

	class MyNewsSourceAdapter extends BaseAdapter {

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return SourceList.sourceNameList.length;
		}

		@Override
		public Object getItem(int position) {
			// TODO Auto-generated method stub
			return null;
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return 0;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			// TODO Auto-generated method stub
			View v = View.inflate(HomeActivity.this, R.layout.items_sourcelist,
					null);
			TextView tv_sourcelist_name = (TextView) v
					.findViewById(R.id.tv_sourcelist_name);
			ImageView iv_sourcelist_logo = (ImageView) v
					.findViewById(R.id.iv_sourcelist_logo);
			tv_sourcelist_name.setText(SourceList.sourceNameList[position]);
			iv_sourcelist_logo.setImageResource(SourceList.sourceIconList[position]);

			return v;
		}
	}

	class MyImgPageAdapter extends PagerAdapter {

		private BitmapUtils bitmapUtils;

		public MyImgPageAdapter() {
			bitmapUtils = new BitmapUtils(HomeActivity.this);
		}

		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return 4;
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			// TODO Auto-generated method stub
			return arg0 == arg1;
		}

		@Override
		public Object instantiateItem(ViewGroup container, int position) {
			// TODO Auto-generated method stub
			ImageView iv = new ImageView(HomeActivity.this);
			iv.setScaleType(ScaleType.FIT_XY);
			if (!"".equals(imgUrls[position])) {
				bitmapUtils.display(iv, imgUrls[position]);
			}
			container.addView(iv);
			return iv;
		}

		@Override
		public void destroyItem(ViewGroup container, int position, Object object) {
			// TODO Auto-generated method stub
			container.removeView((View) object);
		}

	}

	class MyRollPageChangedListener implements OnPageChangeListener {

		@Override
		public void onPageSelected(int arg0) {
			// TODO Auto-generated method stub
			tv_home_rolltitles.setText(titles[arg0]);
		}

		@Override
		public void onPageScrolled(int arg0, float arg1, int arg2) {
			// TODO Auto-generated method stub

		}

		@Override
		public void onPageScrollStateChanged(int arg0) {
			// TODO Auto-generated method stub

		}

	}

	private void initOneSource() {
		// TODO Auto-generated method stub

		Random random = new Random();
		randomSourceId = random.nextInt(SourceList.sourceNameList.length);
		String url = SourceList.sourceUrlList[randomSourceId];
		HttpUtils httpUtils = new HttpUtils();
		httpUtils.configCurrentHttpCacheExpiry(1000 * 10);// 设置超时时间
		httpUtils.send(HttpMethod.GET, url, new RequestCallBack<String>() {

			@Override
			public void onFailure(HttpException arg0, String arg1) {
				// TODO Auto-generated method stub
				arg0.printStackTrace();
				Log.w("connect", arg1);
				Toast.makeText(getApplicationContext(), "网络连接失败", 0).show();
			}

			@Override
			public void onSuccess(ResponseInfo<String> arg0) {
				// TODO Auto-generated method stub
				detail = XmlparserUtils.Xmlparse(arg0.result);
				initRollNews();
				vp_home_rollnews.setAdapter(new MyImgPageAdapter());
				vp_home_rollnews
						.setOnPageChangeListener(new MyRollPageChangedListener());
				tv_home_rolltitles.setText(titles[0]);

				cpi_home_rollnews.setViewPager(vp_home_rollnews);
				cpi_home_rollnews
						.setOnPageChangeListener(new MyRollPageChangedListener());
				cpi_home_rollnews.setSnap(true);
				System.out.println(cpi_home_rollnews.getMeasuredWidth()
						+ "cpi的宽度");
			}

		});

	}

	private void initRollNews() {
		Random random = new Random();
		NewsItem newsItem = null;
		String temp = "";
		for (int i = 0; i < imgUrls.length; i++) {
			boolean flag = true;
			while (temp.isEmpty() || flag) {
				flag = false;
				int itemId = random.nextInt(detail.items.size());
				newsItem = detail.items.get(itemId);
				temp = getImgUrl(newsItem);
				for (String url : imgUrls) {
					if (temp.equals(url)) {
						flag = true;
					}
				}
			}

			imgUrls[i] = temp;
			if (newsItem != null) {
				titles[i] = newsItem.title;
			}
		}
		for (String s : imgUrls) {
			System.out.println(s);
		}
	}

	private String getImgUrl(NewsItem newsItem) {
		String imgUrl = "";
		imgUrl = ExtractImgUrlUtil.extractUrl(newsItem.description);
		return imgUrl;
	}

}
